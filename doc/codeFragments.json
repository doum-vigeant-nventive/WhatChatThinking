{"codeFragments":[{"label":"01 - Starter main without comments","content":"import 'package:flutter/material.dart';\r\n\r\nvoid main() {\r\n  runApp(const MyApp());\r\n}\r\n\r\nclass MyApp extends StatelessWidget {\r\n  const MyApp({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      title: 'Flutter Demo',\r\n      theme: ThemeData(\r\n        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),\r\n        useMaterial3: true,\r\n      ),\r\n      home: const MyHomePage(title: 'Flutter Demo Home Page'),\r\n    );\r\n  }\r\n}\r\n\r\nclass MyHomePage extends StatefulWidget {\r\n  const MyHomePage({super.key, required this.title});\r\n\r\n  final String title;\r\n\r\n  @override\r\n  State<MyHomePage> createState() => _MyHomePageState();\r\n}\r\n\r\nclass _MyHomePageState extends State<MyHomePage> {\r\n  int _counter = 0;\r\n\r\n  void _incrementCounter() {\r\n    setState(() {\r\n      _counter++;\r\n    });\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        backgroundColor: Theme.of(context).colorScheme.inversePrimary,\r\n        title: Text(widget.title),\r\n      ),\r\n      body: Center(\r\n        child: Column(\r\n          mainAxisAlignment: MainAxisAlignment.center,\r\n          children: <Widget>[\r\n            const Text(\r\n              'You have pushed the button this many times:',\r\n            ),\r\n            Text(\r\n              '$_counter',\r\n              style: Theme.of(context).textTheme.headlineMedium,\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n      floatingActionButton: FloatingActionButton(\r\n        onPressed: _incrementCounter,\r\n        tooltip: 'Increment',\r\n        child: const Icon(Icons.add),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"},{"label":"02 - Virgin QuizScreen","content":"import 'package:flutter/material.dart';\r\n\r\nclass QuizScreen extends StatefulWidget {\r\n  const QuizScreen({super.key, required this.title});\r\n\r\n  final String title;\r\n\r\n  @override\r\n  State<QuizScreen> createState() => _QuizScreenState();\r\n}\r\n\r\nclass _QuizScreenState extends State<QuizScreen> {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        backgroundColor: Theme.of(context).colorScheme.inversePrimary,\r\n        title: Text(widget.title),\r\n      ),\r\n      body: Container(),\r\n    );\r\n  }\r\n}\r\n"},{"label":"03 - QuizScreen column","content":"import 'package:flutter/material.dart';\r\n\r\nclass QuizScreen extends StatefulWidget {\r\n  const QuizScreen({super.key, required this.title});\r\n\r\n  final String title;\r\n\r\n  @override\r\n  State<QuizScreen> createState() => _QuizScreenState();\r\n}\r\n\r\nclass _QuizScreenState extends State<QuizScreen> {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        backgroundColor: Theme.of(context).colorScheme.inversePrimary,\r\n        title: Text(widget.title),\r\n      ),\r\n      body: Column(\r\n        children: [\r\n          Container(\r\n            height: 300,\r\n            color: Colors.grey,\r\n          ),\r\n          Row(\r\n            children: [\r\n              FilledButton(\r\n                onPressed: () {},\r\n                child: const Text(\"Content üòÅ\"),\r\n              ),\r\n              FilledButton(\r\n                onPressed: () {},\r\n                child: const Text(\"F√¢ch√© üò†\"),\r\n              ),\r\n            ],\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n"},{"label":"04 - Image.asset","content":"import 'package:flutter/material.dart';\r\n\r\nclass QuizScreen extends StatefulWidget {\r\n  const QuizScreen({super.key, required this.title});\r\n\r\n  final String title;\r\n\r\n  @override\r\n  State<QuizScreen> createState() => _QuizScreenState();\r\n}\r\n\r\nclass _QuizScreenState extends State<QuizScreen> {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        backgroundColor: Theme.of(context).colorScheme.inversePrimary,\r\n        title: Text(widget.title),\r\n      ),\r\n      body: Column(\r\n        children: [\r\n          Image.asset(\r\n            \"assets/rafiki-0.jpg\",\r\n            fit: BoxFit.cover,\r\n          ),\r\n          Row(\r\n            children: [\r\n              FilledButton(\r\n                onPressed: () {},\r\n                child: const Text(\"Content üòÅ\"),\r\n              ),\r\n              FilledButton(\r\n                onPressed: () {},\r\n                child: const Text(\"F√¢ch√© üò†\"),\r\n              ),\r\n            ],\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n"},{"label":"05 - ClipRRect","content":"import 'package:flutter/material.dart';\r\n\r\nclass QuizScreen extends StatefulWidget {\r\n  const QuizScreen({super.key, required this.title});\r\n\r\n  final String title;\r\n\r\n  @override\r\n  State<QuizScreen> createState() => _QuizScreenState();\r\n}\r\n\r\nclass _QuizScreenState extends State<QuizScreen> {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        backgroundColor: Theme.of(context).colorScheme.inversePrimary,\r\n        title: Text(widget.title),\r\n      ),\r\n      body: Padding(\r\n        padding: const EdgeInsets.all(16),\r\n        child: Column(\r\n          spacing: 16,\r\n          crossAxisAlignment: CrossAxisAlignment.stretch,\r\n          children: [\r\n            Expanded(\r\n              child: ClipRRect(\r\n                borderRadius: BorderRadius.circular(20),\r\n                child: Image.asset(\r\n                  \"assets/rafiki-0.jpg\",\r\n                  fit: BoxFit.cover,\r\n                ),\r\n              ),\r\n            ),\r\n            Row(\r\n              spacing: 16,\r\n              children: [\r\n                Expanded(\r\n                  child: FilledButton(\r\n                    onPressed: () {},\r\n                    child: const Text(\"Content üòÅ\"),\r\n                  ),\r\n                ),\r\n                Expanded(\r\n                  child: FilledButton(\r\n                    onPressed: () {},\r\n                    child: const Text(\"F√¢ch√© üò†\"),\r\n                  ),\r\n                ),\r\n              ],\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"},{"label":"06 - Emotions","content":"import 'package:flutter/material.dart';\r\n\r\nimport 'question.dart';\r\n\r\nenum Emotion { happy, mad }\r\n\r\nconst answers = [\r\n  Emotion.mad,\r\n  Emotion.happy,\r\n  Emotion.mad,\r\n  Emotion.happy,\r\n];\r\n\r\nclass QuizScreen extends StatefulWidget {\r\n  const QuizScreen({super.key, required this.title});\r\n\r\n  final String title;\r\n\r\n  @override\r\n  State<QuizScreen> createState() => _QuizScreenState();\r\n}\r\n\r\nclass _QuizScreenState extends State<QuizScreen> {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        backgroundColor: Theme.of(context).colorScheme.inversePrimary,\r\n        title: Text(widget.title),\r\n      ),\r\n      body: const Question(),\r\n    );\r\n  }\r\n}\r\n"},{"label":"07 - _incrementCounter()","content":"import 'package:flutter/material.dart';\r\n\r\nimport 'quiz_screen.dart';\r\n\r\nclass Question extends StatefulWidget {\r\n  const Question({super.key});\r\n\r\n  @override\r\n  State<Question> createState() => _QuestionState();\r\n}\r\n\r\nclass _QuestionState extends State<Question> {\r\n  int _counter = 0;\r\n\r\n  void _incrementCounter() {\r\n    final counter = _counter + 1;\r\n    if (_counter < answers.length - 1) {\r\n      setState(() => _counter = counter);\r\n      print(\"Counter: $_counter\");\r\n    }\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Padding(\r\n      padding: const EdgeInsets.all(16),\r\n      child: Column(\r\n        spacing: 16,\r\n        crossAxisAlignment: CrossAxisAlignment.stretch,\r\n        children: [\r\n          Expanded(\r\n            child: ClipRRect(\r\n              borderRadius: BorderRadius.circular(20),\r\n              child: Image.asset(\r\n                \"assets/rafiki-0.jpg\",\r\n                fit: BoxFit.cover,\r\n              ),\r\n            ),\r\n          ),\r\n          Row(\r\n            spacing: 16,\r\n            children: [\r\n              Expanded(\r\n                child: FilledButton(\r\n                  onPressed: () {},\r\n                  child: const Text(\"Content üòÅ\"),\r\n                ),\r\n              ),\r\n              Expanded(\r\n                child: FilledButton(\r\n                  onPressed: () {},\r\n                  child: const Text(\"F√¢ch√© üò†\"),\r\n                ),\r\n              ),\r\n            ],\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n"},{"label":"08 - _selectAnswer()","content":"import 'package:flutter/material.dart';\r\n\r\nimport 'quiz_screen.dart';\r\n\r\nclass Question extends StatefulWidget {\r\n  const Question({super.key});\r\n\r\n  @override\r\n  State<Question> createState() => _QuestionState();\r\n}\r\n\r\nclass _QuestionState extends State<Question> {\r\n  int _counter = 0;\r\n  Color? _happyColor;\r\n  Color? _madColor;\r\n\r\n  void _selectAnswer(Emotion answer) {\r\n    final selectedRightAnswer = answers[_counter] == answer;\r\n    _setButtonColor(answer, selectedRightAnswer);\r\n    _resetButtonColor();\r\n    _incrementCounter();\r\n  }\r\n\r\n  void _setButtonColor(Emotion answer, bool selectedRightAnswer) {\r\n    final color = selectedRightAnswer ? Colors.green : Colors.red;\r\n    if (answer == Emotion.happy) {\r\n      setState(() => _happyColor = color);\r\n    } else {\r\n      setState(() => _madColor = color);\r\n    }\r\n  }\r\n\r\n  void _resetButtonColor() {\r\n    setState(() {\r\n      _happyColor = null;\r\n      _madColor = null;\r\n    });\r\n  }\r\n\r\n  void _incrementCounter() {\r\n    final counter = _counter + 1;\r\n    if (_counter < answers.length - 1) {\r\n      setState(() => _counter = counter);\r\n      print(\"Counter: $_counter\");\r\n    }\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Padding(\r\n      padding: const EdgeInsets.all(16),\r\n      child: Column(\r\n        spacing: 16,\r\n        crossAxisAlignment: CrossAxisAlignment.stretch,\r\n        children: [\r\n          Expanded(\r\n            child: ClipRRect(\r\n              borderRadius: BorderRadius.circular(20),\r\n              child: Image.asset(\r\n                \"assets/rafiki-0.jpg\",\r\n                fit: BoxFit.cover,\r\n              ),\r\n            ),\r\n          ),\r\n          Row(\r\n            spacing: 16,\r\n            children: [\r\n              Expanded(\r\n                child: FilledButton(\r\n                  onPressed: () => _selectAnswer(Emotion.happy),\r\n                  style: FilledButton.styleFrom(backgroundColor: _happyColor),\r\n                  child: const Text(\"Content üòÅ\"),\r\n                ),\r\n              ),\r\n              Expanded(\r\n                child: FilledButton(\r\n                  onPressed: () => _selectAnswer(Emotion.mad),\r\n                  style: FilledButton.styleFrom(backgroundColor: _madColor),\r\n                  child: const Text(\"F√¢ch√© üò†\"),\r\n                ),\r\n              ),\r\n            ],\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n"},{"label":"09 - Future.delayed","content":"import 'package:flutter/material.dart';\r\n\r\nimport 'quiz_screen.dart';\r\n\r\nclass Question extends StatefulWidget {\r\n  const Question({super.key});\r\n\r\n  @override\r\n  State<Question> createState() => _QuestionState();\r\n}\r\n\r\nclass _QuestionState extends State<Question> {\r\n  int _counter = 0;\r\n  Color? _happyColor;\r\n  Color? _madColor;\r\n\r\n  Future<void> _selectAnswer(Emotion answer) async {\r\n    final selectedRightAnswer = answers[_counter] == answer;\r\n    _setButtonColor(answer, selectedRightAnswer);\r\n    await Future.delayed(const Duration(milliseconds: 500));\r\n    _resetButtonColor();\r\n    _incrementCounter();\r\n  }\r\n\r\n  void _setButtonColor(Emotion answer, bool selectedRightAnswer) {\r\n    final color = selectedRightAnswer ? Colors.green : Colors.red;\r\n    if (answer == Emotion.happy) {\r\n      setState(() => _happyColor = color);\r\n    } else {\r\n      setState(() => _madColor = color);\r\n    }\r\n  }\r\n\r\n  void _resetButtonColor() {\r\n    setState(() {\r\n      _happyColor = null;\r\n      _madColor = null;\r\n    });\r\n  }\r\n\r\n  void _incrementCounter() {\r\n    final counter = _counter + 1;\r\n    if (_counter < answers.length - 1) {\r\n      setState(() => _counter = counter);\r\n      print(\"Counter: $_counter\");\r\n    }\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Padding(\r\n      padding: const EdgeInsets.all(16),\r\n      child: Column(\r\n        spacing: 16,\r\n        crossAxisAlignment: CrossAxisAlignment.stretch,\r\n        children: [\r\n          Expanded(\r\n            child: ClipRRect(\r\n              borderRadius: BorderRadius.circular(20),\r\n              child: Image.asset(\r\n                \"assets/rafiki-0.jpg\",\r\n                fit: BoxFit.cover,\r\n              ),\r\n            ),\r\n          ),\r\n          Row(\r\n            spacing: 16,\r\n            children: [\r\n              Expanded(\r\n                child: FilledButton(\r\n                  onPressed: () async => await _selectAnswer(Emotion.happy),\r\n                  style: FilledButton.styleFrom(backgroundColor: _happyColor),\r\n                  child: const Text(\"Content üòÅ\"),\r\n                ),\r\n              ),\r\n              Expanded(\r\n                child: FilledButton(\r\n                  onPressed: () async => await _selectAnswer(Emotion.mad),\r\n                  style: FilledButton.styleFrom(backgroundColor: _madColor),\r\n                  child: const Text(\"F√¢ch√© üò†\"),\r\n                ),\r\n              ),\r\n            ],\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n"},{"label":"10 - Score","content":"import 'package:flutter/material.dart';\r\n\r\nenum Emotion { happy, mad }\r\n\r\nconst answers = [\r\n  Emotion.mad,\r\n  Emotion.happy,\r\n  Emotion.mad,\r\n  Emotion.happy,\r\n];\r\n\r\nclass QuizScreen extends StatefulWidget {\r\n  const QuizScreen({super.key, required this.title});\r\n\r\n  final String title;\r\n\r\n  @override\r\n  State<QuizScreen> createState() => _QuizScreenState();\r\n}\r\n\r\nclass _QuizScreenState extends State<QuizScreen> {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        backgroundColor: Theme.of(context).colorScheme.inversePrimary,\r\n        title: Text(widget.title),\r\n      ),\r\n      body: Padding(\r\n        padding: const EdgeInsets.all(16),\r\n        child: Column(\r\n          crossAxisAlignment: CrossAxisAlignment.stretch,\r\n          children: [\r\n            Expanded(\r\n              child: Column(\r\n                mainAxisAlignment: MainAxisAlignment.center,\r\n                children: [\r\n                  Text(\r\n                    \"Termin√©!\",\r\n                    style: Theme.of(context)\r\n                        .textTheme\r\n                        .headlineLarge!\r\n                        .copyWith(color: Theme.of(context).colorScheme.primary),\r\n                  ),\r\n                  const SizedBox(height: 32),\r\n                  Text(\r\n                    \"Ton score:\",\r\n                    style: Theme.of(context).textTheme.bodyLarge,\r\n                  ),\r\n                  const SizedBox(height: 16),\r\n                  Text(\r\n                    \"correctAnswers / answers\",\r\n                    style: Theme.of(context).textTheme.headlineMedium,\r\n                  ),\r\n                ],\r\n              ),\r\n            ),\r\n            FilledButton(\r\n              onPressed: () {},\r\n              child: const Text(\"Recommencer\"),\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"},{"label":"11 - _showScoreWidget","content":"import 'package:flutter/material.dart';\r\n\r\nimport 'question.dart';\r\nimport 'score.dart';\r\n\r\nenum Emotion { happy, mad }\r\n\r\nconst answers = [\r\n  Emotion.mad,\r\n  Emotion.happy,\r\n  Emotion.mad,\r\n  Emotion.happy,\r\n];\r\n\r\nclass QuizScreen extends StatefulWidget {\r\n  const QuizScreen({super.key, required this.title});\r\n\r\n  final String title;\r\n\r\n  @override\r\n  State<QuizScreen> createState() => _QuizScreenState();\r\n}\r\n\r\nclass _QuizScreenState extends State<QuizScreen> {\r\n  bool _showScoreWidget = false;\r\n\r\n  void _showScore() {\r\n    setState(() => _showScoreWidget = true);\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        backgroundColor: Theme.of(context).colorScheme.inversePrimary,\r\n        title: Text(widget.title),\r\n      ),\r\n      body: _showScoreWidget ? Score() : Question(),\r\n    );\r\n  }\r\n}\r\n"},{"label":"12 - widget.showScore()","content":"import 'package:flutter/material.dart';\r\n\r\nimport 'quiz_screen.dart';\r\n\r\nclass Question extends StatefulWidget {\r\n  const Question({required this.showScore, super.key});\r\n\r\n  final void Function() showScore;\r\n\r\n  @override\r\n  State<Question> createState() => _QuestionState();\r\n}\r\n\r\nclass _QuestionState extends State<Question> {\r\n  int _counter = 0;\r\n  Color? _happyColor;\r\n  Color? _madColor;\r\n\r\n  Future<void> _selectAnswer(Emotion answer) async {\r\n    final selectedRightAnswer = answers[_counter] == answer;\r\n    _setButtonColor(answer, selectedRightAnswer);\r\n    await Future.delayed(const Duration(milliseconds: 500));\r\n    _resetButtonColor();\r\n    _incrementCounter();\r\n  }\r\n\r\n  void _setButtonColor(Emotion answer, bool selectedRightAnswer) {\r\n    final color = selectedRightAnswer ? Colors.green : Colors.red;\r\n    if (answer == Emotion.happy) {\r\n      setState(() => _happyColor = color);\r\n    } else {\r\n      setState(() => _madColor = color);\r\n    }\r\n  }\r\n\r\n  void _resetButtonColor() {\r\n    setState(() {\r\n      _happyColor = null;\r\n      _madColor = null;\r\n    });\r\n  }\r\n\r\n  void _incrementCounter() {\r\n    final counter = _counter + 1;\r\n    if (_counter < answers.length - 1) {\r\n      setState(() => _counter = counter);\r\n      print(\"Counter: $_counter\");\r\n    } else {\r\n      widget.showScore();\r\n    }\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Padding(\r\n      padding: const EdgeInsets.all(16),\r\n      child: Column(\r\n        spacing: 16,\r\n        crossAxisAlignment: CrossAxisAlignment.stretch,\r\n        children: [\r\n          Expanded(\r\n            child: ClipRRect(\r\n              borderRadius: BorderRadius.circular(20),\r\n              child: Image.asset(\r\n                \"assets/rafiki-0.jpg\",\r\n                fit: BoxFit.cover,\r\n              ),\r\n            ),\r\n          ),\r\n          Row(\r\n            spacing: 16,\r\n            children: [\r\n              Expanded(\r\n                child: FilledButton(\r\n                  onPressed: () async => await _selectAnswer(Emotion.happy),\r\n                  style: FilledButton.styleFrom(backgroundColor: _happyColor),\r\n                  child: const Text(\"Content üòÅ\"),\r\n                ),\r\n              ),\r\n              Expanded(\r\n                child: FilledButton(\r\n                  onPressed: () async => await _selectAnswer(Emotion.mad),\r\n                  style: FilledButton.styleFrom(backgroundColor: _madColor),\r\n                  child: const Text(\"F√¢ch√© üò†\"),\r\n                ),\r\n              ),\r\n            ],\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n"},{"label":"13 - onStartOver()","content":"import 'package:flutter/material.dart';\r\n\r\nclass Score extends StatelessWidget {\r\n  const Score({required this.onStartOver, super.key});\r\n\r\n  final void Function() onStartOver;\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Padding(\r\n      padding: const EdgeInsets.all(16),\r\n      child: Column(\r\n        crossAxisAlignment: CrossAxisAlignment.stretch,\r\n        children: [\r\n          Expanded(\r\n            child: Column(\r\n              mainAxisAlignment: MainAxisAlignment.center,\r\n              children: [\r\n                Text(\r\n                  \"Termin√©!\",\r\n                  style: Theme.of(context)\r\n                      .textTheme\r\n                      .headlineLarge!\r\n                      .copyWith(color: Theme.of(context).colorScheme.primary),\r\n                ),\r\n                const SizedBox(height: 32),\r\n                Text(\r\n                  \"Ton score:\",\r\n                  style: Theme.of(context).textTheme.bodyLarge,\r\n                ),\r\n                const SizedBox(height: 16),\r\n                Text(\r\n                  \"correctAnswers / answers\",\r\n                  style: Theme.of(context).textTheme.headlineMedium,\r\n                ),\r\n              ],\r\n            ),\r\n          ),\r\n          FilledButton(\r\n            onPressed: onStartOver,\r\n            child: const Text(\"Recommencer\"),\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n"},{"label":"14 - _startOver","content":"import 'package:flutter/material.dart';\r\n\r\nimport 'question.dart';\r\nimport 'score.dart';\r\n\r\nenum Emotion { happy, mad }\r\n\r\nconst answers = [\r\n  Emotion.mad,\r\n  Emotion.happy,\r\n  Emotion.mad,\r\n  Emotion.happy,\r\n];\r\n\r\nclass QuizScreen extends StatefulWidget {\r\n  const QuizScreen({super.key, required this.title});\r\n\r\n  final String title;\r\n\r\n  @override\r\n  State<QuizScreen> createState() => _QuizScreenState();\r\n}\r\n\r\nclass _QuizScreenState extends State<QuizScreen> {\r\n  bool _showScoreWidget = false;\r\n\r\n  void _startOver() {\r\n    setState(() => _showScoreWidget = false);\r\n  }\r\n\r\n  void _showScore() {\r\n    setState(() => _showScoreWidget = true);\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        backgroundColor: Theme.of(context).colorScheme.inversePrimary,\r\n        title: Text(widget.title),\r\n      ),\r\n      body: _showScoreWidget\r\n          ? Score(\r\n              onStartOver: _startOver,\r\n            )\r\n          : Question(\r\n              showScore: _showScore,\r\n            ),\r\n    );\r\n  }\r\n}\r\n"},{"label":"15 - incrementCorrecAnswers()","content":"import 'package:flutter/material.dart';\r\n\r\nimport 'quiz_screen.dart';\r\n\r\nclass Question extends StatefulWidget {\r\n  const Question({\r\n    required this.incrementCorrectAnswers,\r\n    required this.showScore,\r\n    super.key,\r\n  });\r\n\r\n  final void Function() incrementCorrectAnswers;\r\n  final void Function() showScore;\r\n\r\n  @override\r\n  State<Question> createState() => _QuestionState();\r\n}\r\n\r\nclass _QuestionState extends State<Question> {\r\n  int _counter = 0;\r\n  Color? _happyColor;\r\n  Color? _madColor;\r\n\r\n  Future<void> _selectAnswer(Emotion answer) async {\r\n    final selectedRightAnswer = answers[_counter] == answer;\r\n\r\n    if (selectedRightAnswer) widget.incrementCorrectAnswers();\r\n\r\n    _setButtonColor(answer, selectedRightAnswer);\r\n\r\n    await Future.delayed(const Duration(milliseconds: 500));\r\n\r\n    _resetButtonColor();\r\n    _incrementCounter();\r\n  }\r\n\r\n  void _setButtonColor(Emotion answer, bool selectedRightAnswer) {\r\n    final color = selectedRightAnswer ? Colors.green : Colors.red;\r\n    if (answer == Emotion.happy) {\r\n      setState(() => _happyColor = color);\r\n    } else {\r\n      setState(() => _madColor = color);\r\n    }\r\n  }\r\n\r\n  void _resetButtonColor() {\r\n    setState(() {\r\n      _happyColor = null;\r\n      _madColor = null;\r\n    });\r\n  }\r\n\r\n  void _incrementCounter() {\r\n    final counter = _counter + 1;\r\n    if (_counter < answers.length - 1) {\r\n      setState(() => _counter = counter);\r\n      print(\"Counter: $_counter\");\r\n    } else {\r\n      widget.showScore();\r\n    }\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Padding(\r\n      padding: const EdgeInsets.all(16),\r\n      child: Column(\r\n        spacing: 16,\r\n        crossAxisAlignment: CrossAxisAlignment.stretch,\r\n        children: [\r\n          Expanded(\r\n            child: ClipRRect(\r\n              borderRadius: BorderRadius.circular(20),\r\n              child: Image.asset(\r\n                \"assets/rafiki-0.jpg\",\r\n                fit: BoxFit.cover,\r\n              ),\r\n            ),\r\n          ),\r\n          Row(\r\n            spacing: 16,\r\n            children: [\r\n              Expanded(\r\n                child: FilledButton(\r\n                  onPressed: () async => await _selectAnswer(Emotion.happy),\r\n                  style: FilledButton.styleFrom(backgroundColor: _happyColor),\r\n                  child: const Text(\"Content üòÅ\"),\r\n                ),\r\n              ),\r\n              Expanded(\r\n                child: FilledButton(\r\n                  onPressed: () async => await _selectAnswer(Emotion.mad),\r\n                  style: FilledButton.styleFrom(backgroundColor: _madColor),\r\n                  child: const Text(\"F√¢ch√© üò†\"),\r\n                ),\r\n              ),\r\n            ],\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n"},{"label":"16 - _incrementCorrectAnswers","content":"import 'package:flutter/material.dart';\r\n\r\nimport 'question.dart';\r\nimport 'score.dart';\r\n\r\nenum Emotion { happy, mad }\r\n\r\nconst answers = [\r\n  Emotion.mad,\r\n  Emotion.happy,\r\n  Emotion.mad,\r\n  Emotion.happy,\r\n];\r\n\r\nclass QuizScreen extends StatefulWidget {\r\n  const QuizScreen({super.key, required this.title});\r\n\r\n  final String title;\r\n\r\n  @override\r\n  State<QuizScreen> createState() => _QuizScreenState();\r\n}\r\n\r\nclass _QuizScreenState extends State<QuizScreen> {\r\n  bool _showScoreWidget = false;\r\n  int _correctAnswers = 0;\r\n\r\n  void _startOver() {\r\n    setState(() {\r\n      _showScoreWidget = false;\r\n      _correctAnswers = 0;\r\n    });\r\n  }\r\n\r\n  void _incrementCorrectAnswers() {\r\n    _correctAnswers++;\r\n  }\r\n\r\n  void _showScore() {\r\n    setState(() => _showScoreWidget = true);\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        backgroundColor: Theme.of(context).colorScheme.inversePrimary,\r\n        title: Text(widget.title),\r\n      ),\r\n      body: _showScoreWidget\r\n          ? Score(\r\n              onStartOver: _startOver,\r\n            )\r\n          : Question(\r\n              incrementCorrectAnswers: _incrementCorrectAnswers,\r\n              showScore: _showScore,\r\n            ),\r\n    );\r\n  }\r\n}\r\n"},{"label":"17 - answers","content":"import 'package:flutter/material.dart';\r\n\r\nimport 'question.dart';\r\nimport 'score.dart';\r\n\r\nenum Emotion { happy, mad }\r\n\r\nclass QuizScreen extends StatefulWidget {\r\n  const QuizScreen({super.key, required this.title});\r\n\r\n  final String title;\r\n\r\n  @override\r\n  State<QuizScreen> createState() => _QuizScreenState();\r\n}\r\n\r\nclass _QuizScreenState extends State<QuizScreen> {\r\n  bool _showScoreWidget = false;\r\n  int _correctAnswers = 0;\r\n\r\n  void _startOver() {\r\n    setState(() {\r\n      _showScoreWidget = false;\r\n      _correctAnswers = 0;\r\n    });\r\n  }\r\n\r\n  void _incrementCorrectAnswers() {\r\n    setState(() => _correctAnswers++);\r\n  }\r\n\r\n  void _showScore() {\r\n    setState(() => _showScoreWidget = true);\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        backgroundColor: Theme.of(context).colorScheme.inversePrimary,\r\n        title: Text(widget.title),\r\n      ),\r\n      body: _showScoreWidget\r\n          ? Score(\r\n              correctAnswers: _correctAnswers,\r\n              onStartOver: _startOver,\r\n            )\r\n          : Question(\r\n              incrementCorrectAnswers: _incrementCorrectAnswers,\r\n              showScore: _showScore,\r\n            ),\r\n    );\r\n  }\r\n}\r\n\r\nconst answers = [\r\n  Emotion.happy,\r\n  Emotion.mad,\r\n  Emotion.mad,\r\n  Emotion.happy,\r\n  Emotion.happy,\r\n  Emotion.mad,\r\n  Emotion.happy,\r\n  Emotion.happy,\r\n  Emotion.mad,\r\n  Emotion.happy,\r\n  Emotion.mad,\r\n  Emotion.happy,\r\n];\r\n"},{"label":"18 - pubspec","content":"\r\n\r\nflutter_launcher_icons:\r\n  android: \"launcher_icon\"\r\n  ios: true\r\n  image_path: \"assets/launcher_icons/launcher_icon.png\"\r\n  min_sdk_android: 21 # android min sdk min:16, default 21\r\n  web:\r\n    generate: true\r\n    image_path: \"assets/launcher_icons/launcher_icon.png\"\r\n    background_color: \"#hexcode\"\r\n    theme_color: \"#hexcode\"\r\n  windows:\r\n    generate: true\r\n    image_path: \"assets/launcher_icons/launcher_icon.png\"\r\n    icon_size: 48 # min:48, max:256, default: 48\r\n  macos:\r\n    generate: true\r\n    image_path: \"assets/launcher_icons/launcher_icon.png\"\r\n\r\nflutter_native_splash:\r\n  background_image: assets/splashscreen/splashscreen.png\r\n  image: assets/splashscreen/splashscreen.png\r\n  android_12:\r\n    image: assets/splashscreen/splashscreen.png\r\n    color: '#FFFFFF'"}]}